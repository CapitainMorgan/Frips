generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id                                   Int               @id @default(autoincrement())
  Email                                String            @unique(map: "Email") @db.VarChar(255)
  Password                             String            @db.VarChar(60)
  Pseudo                               String            @unique(map: "Pseudo") @db.VarChar(50)
  Lastname                             String?           @db.VarChar(255)
  PaymentMethod                        String?           @db.VarChar(50)
  IBAN                                 String?           @db.VarChar(35)
  Description                          String?           @db.VarChar(255)
  Firstname                            String?           @db.VarChar(255)
  TelNumber                            String?           @unique(map: "TelNumber") @db.VarChar(50)
  id_Address                           Int?
  address                              address?          @relation(fields: [id_Address], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "account_ibfk_1")
  achievment_user                      achievment_user[]
  chat_accountTochat_id_Account_1      chat[]            @relation("accountTochat_id_Account_1")
  chat_accountTochat_id_Account_2      chat[]            @relation("accountTochat_id_Account_2")
  favorit                              favorit[]
  image                                image?
  item                                 item[]
  message_accountTomessage_id_Receiver message[]         @relation("accountTomessage_id_Receiver")
  message_accountTomessage_id_Sender   message[]         @relation("accountTomessage_id_Sender")
  pricepropose                         pricepropose[]
  review                               review[]
  sell                                 sell[]

  @@index([id_Address], map: "account_ibfk_1")
}

model achievement {
  id              Int               @id @default(autoincrement())
  Name            String            @db.VarChar(50)
  Color           Int
  Sold            Float
  Type            String            @db.VarChar(50)
  Description     String?           @db.VarChar(255)
  achievment_user achievment_user[]
}

model address {
  id        Int       @id @default(autoincrement())
  State     String?   @db.VarChar(50)
  NPA       Int       @db.SmallInt
  City      String    @db.VarChar(255)
  Street    String    @db.VarChar(255)
  NumStreet String    @db.VarChar(10)
  POBox     String?   @db.VarChar(50)
  account   account[]
}

model brand {
  id         Int          @id @default(autoincrement())
  Name       String       @unique(map: "Name") @db.VarChar(50)
  item_brand item_brand[]
}

model moderator {
  id       Int    @id @default(autoincrement())
  Email    String @unique(map: "Email") @db.VarChar(255)
  Password String @db.VarChar(60)
  Pseudo   String @unique(map: "Pseudo") @db.VarChar(50)
}

model review {
  id         Int      @id @default(autoincrement())
  Date_Houre DateTime @db.DateTime(0)
  Note       Int
  Text       String?  @db.VarChar(255)
  id_Account Int
  account    account  @relation(fields: [id_Account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_ibfk_1")

  @@index([id_Account], map: "review_ibfk_1")
}

model category {
  id                                                      Int                 @id @default(autoincrement())
  Name                                                    String?             @db.VarChar(50)
  category_category_categoryTocategory_category_id_Child  category_category[] @relation("categoryTocategory_category_id_Child")
  category_category_categoryTocategory_category_id_Parent category_category[] @relation("categoryTocategory_category_id_Parent")
  item_category                                           item_category[]
}

model color {
  id         Int          @id @default(autoincrement())
  Name       String       @unique(map: "Name") @db.VarChar(50)
  Code       String       @db.VarChar(10)
  item_color item_color[]
}

model fees {
  id          Int         @id @default(autoincrement())
  Name        String?     @db.VarChar(50)
  Description String?     @db.VarChar(255)
  Price       Float
  item_fees   item_fees[]
}

model itemcondition {
  id          Int     @id @default(autoincrement())
  Name        String? @db.VarChar(50)
  Description String? @db.VarChar(255)
  item        item[]
}

model chat {
  id                                 Int       @id @default(autoincrement())
  id_Account_1                       Int
  id_Account_2                       Int
  account_accountTochat_id_Account_1 account   @relation("accountTochat_id_Account_1", fields: [id_Account_1], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_ibfk_1")
  account_accountTochat_id_Account_2 account   @relation("accountTochat_id_Account_2", fields: [id_Account_2], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_ibfk_2")
  message                            message[]

  @@index([id_Account_1], map: "chat_ibfk_1")
  @@index([id_Account_2], map: "chat_ibfk_2")
}

model achievment_user {
  id_Account     Int
  id_Achievement Int
  account        account     @relation(fields: [id_Account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "achievment_user_ibfk_1")
  achievement    achievement @relation(fields: [id_Achievement], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "achievment_user_ibfk_2")

  @@id([id_Account, id_Achievement])
  @@index([id_Achievement], map: "achievment_user_ibfk_2")
}

model category_category {
  id_Parent                                      Int
  id_Child                                       Int
  category_categoryTocategory_category_id_Child  category @relation("categoryTocategory_category_id_Child", fields: [id_Child], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "category_category_ibfk_2")
  category_categoryTocategory_category_id_Parent category @relation("categoryTocategory_category_id_Parent", fields: [id_Parent], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "category_category_ibfk_1")

  @@id([id_Parent, id_Child])
  @@index([id_Child], map: "category_category_ibfk_2")
}

model favorit {
  id_Account Int
  id_Item    Int
  account    account @relation(fields: [id_Account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "favorit_ibfk_1")
  item       item    @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "favorit_ibfk_2")

  @@id([id_Account, id_Item])
  @@index([id_Item], map: "favorit_ibfk_2")
}

model image {
  id         Int      @id @default(autoincrement())
  image      String   @db.VarChar(255)
  id_Item    Int?
  id_Account Int?     @unique(map: "id_Account")
  account    account? @relation(fields: [id_Account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "image_ibfk_2")
  item       item?    @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "image_ibfk_1")

  @@index([id_Item], map: "image_ibfk_1")
}

model item {
  id               Int             @id @default(autoincrement())
  Description      String?         @db.VarChar(255)
  Name             String?         @db.VarChar(50)
  Size             String?         @db.VarChar(50)
  DatePuplication  DateTime        @db.DateTime(0)
  Price            Float
  CurrentAuction   Boolean
  id_Seller        Int
  id_ItemCondition Int
  NbView           Int?
  itemcondition    itemcondition   @relation(fields: [id_ItemCondition], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_ibfk_2")
  account          account         @relation(fields: [id_Seller], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_ibfk_1")
  favorit          favorit[]
  image            image[]
  item_brand       item_brand[]
  item_category    item_category[]
  item_color       item_color[]
  item_fees        item_fees[]
  message          message[]
  pricepropose     pricepropose[]
  report           report[]
  sell             sell[]

  @@index([id_Seller], map: "item_ibfk_1")
  @@index([id_ItemCondition], map: "item_ibfk_2")
}

model item_brand {
  id_Item  Int
  id_Brand Int
  brand    brand @relation(fields: [id_Brand], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_brand_ibfk_2")
  item     item  @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_brand_ibfk_1")

  @@id([id_Item, id_Brand])
  @@index([id_Brand], map: "item_brand_ibfk_2")
}

model item_category {
  id_Item     Int
  id_Category Int
  category    category @relation(fields: [id_Category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_category_ibfk_2")
  item        item     @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_category_ibfk_1")

  @@id([id_Item, id_Category])
  @@index([id_Category], map: "item_category_ibfk_2")
}

model item_color {
  id_Item  Int
  id_Color Int
  color    color @relation(fields: [id_Color], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_color_ibfk_2")
  item     item  @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_color_ibfk_1")

  @@id([id_Item, id_Color])
  @@index([id_Color], map: "item_color_ibfk_2")
}

model item_fees {
  id_Item Int
  id_Fees Int
  fees    fees @relation(fields: [id_Fees], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_fees_ibfk_2")
  item    item @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_fees_ibfk_1")

  @@id([id_Item, id_Fees])
  @@index([id_Fees], map: "item_fees_ibfk_2")
}

model message {
  id                                   Int      @id @default(autoincrement())
  Text                                 String?  @db.VarChar(255)
  Date_Houre                           DateTime @db.DateTime(0)
  id_Sender                            Int
  id_Receiver                          Int
  id_Chat                              Int
  id_Item                              Int?
  chat                                 chat     @relation(fields: [id_Chat], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_3")
  item                                 item?    @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_4")
  account_accountTomessage_id_Receiver account  @relation("accountTomessage_id_Receiver", fields: [id_Receiver], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_2")
  account_accountTomessage_id_Sender   account  @relation("accountTomessage_id_Sender", fields: [id_Sender], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_1")

  @@index([id_Sender], map: "message_ibfk_1")
  @@index([id_Receiver], map: "message_ibfk_2")
  @@index([id_Chat], map: "message_ibfk_3")
  @@index([id_Item], map: "message_ibfk_4")
}

model report {
  id         Int      @id @default(autoincrement())
  Date_Houre DateTime @db.DateTime(0)
  Text       String   @db.VarChar(255)
  id_Item    Int
  item       item     @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "report_ibfk_1")

  @@index([id_Item], map: "report_ibfk_1")
}

model pricepropose {
  id_Account  Int
  id_Item     Int
  Price       Float
  Approve     Boolean
  dateApprove DateTime? @db.DateTime(0)
  account     account   @relation(fields: [id_Account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pricepropose_ibfk_1")
  item        item      @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pricepropose_ibfk_2")

  @@id([id_Account, id_Item])
  @@index([id_Item], map: "pricepropose_ibfk_2")
}

model sell {
  id_Account Int
  Price      Float?
  Protection Float?
  DateSell   DateTime  @db.DateTime(0)
  Statement  String?   @db.VarChar(50)
  DateSend   DateTime? @db.DateTime(0)
  id_Item    Int
  account    account   @relation(fields: [id_Account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sell_ibfk_1")
  item       item      @relation(fields: [id_Item], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sell_ibfk_2")

  @@id([id_Account, id_Item])
  @@index([id_Item], map: "sell_ibfk_2")
}
